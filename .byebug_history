c
user.methods
user.schemas
user
c
n
c
e
n
c
n
"#{project_schemas}"
"#{username}"
n"#{username}"
n
e
n
User.all
n
c
e
n
pp con
con
n
AACT::Application::AACT_PUBLIC_DATABASE_NAME
n
error
n
"#{username}"
"#{project_schemas}"
#{project_schemas}
n
c
exception
n
con
n
error
n
status
n
c
n
nn
n
c
n
c
n
con
n
user
n
step
n
step
n
User.all.count
User.all
n
c
user.username= "chuck"
user
c
n
e
n
self
n
user
n
e
n
user=User.new(:first_name=>'first', :last_name=>'last',:email=>'rspec.test@duke.edu',:username=>username,:password=>pwd)
user
n
User.all
n
con
n
@dbconfig["test"]
n
c
e
n
c
con.execute('select count(*) from ctgov.studies').count
con.search_path
n
pp con
con["searchpath"]
con
con.search_path
search_path
n
AACT::Application::AACT_PUBLIC_DATABASE_NAME
AACT::Application::AACT_PUBLIC_HOSTNAME
c
n
c
n
e
n
exception
ar
n
con
n
e
n
c
con.execute('show search_path;')
n
con
n
user.confirm
n
c
n
con.execute('select count(*) from ctgov.studies').count
n
con.active?
n
@dbconfig[:test]
n
e
n
pwd
n
Util::UserDbManager.new.user_account_exists?(user.username)
n
user.sign_in_count
n
User.count
n
user.save!
n
user
n
User.all
n
@dbconfig["test"]["url"]="postgres://chuck@localhost:5432/aact_admin_test"
ActiveRecord::Base.establish_connection @dbconfig["test"]
n
c
@dbconfig["test"]["url"]="postgres://chuck@localhost:5432/aact_admin_test"
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]["url"]="postgres://chuck@localhost:5432/aact_admin_test"
@dbconfig["test"]["url"]
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]["url"]="postgres://chuck@localhost:5432/aact_admin"
@dbconfig["test"]["url"]="postgres://chuck@localhost:5432/aact_admin\"
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]["url"]="<%= \"postgres://chuck@localhost:5432/aact_admin\" %>"
@dbconfig["test"]["url"]="<%= \"postgres://ctti@localhost:5432/aact_admin\" %>"
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]["url"]="<%= \"postgres://ctti@localhost:5432/aact_admin\" %>"
@dbconfig["test"]
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]["url"]="<%= \"postgres://ctti@localhost:5432/aact_admin_test\" %>"
@dbconfig["test"]
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]
@dbconfig["test"]["url"]="<%= \"postgres://chuck@localhost:5432/aact_admin_test\" %>"
@dbconfig["test"]
@dbconfig["test"][:url]
@dbconfig["test"][url]
@dbconfig["test"]["url"]
ActiveRecord::Base.establish_connection @dbconfig["test"]
@dbconfig["test"]
@dbconfig[:test]
n
YAML.load(File.read('config/database.yml'))
c
user.save!
user
user=User.new(:first_name=>'first', :last_name=>'last',:email=>'rspec.test@duke.edu',:username=>'rspec!_test',:password=>'aact')
user
user.save!
n
 n
c
n
User.count
n
user.save!
n
c
n
User.all
n
User.all
expect { user.save! }.to raise_error(ActiveRecord::RecordInvalid, "Validation failed: Username can contain only lowercase characters and numbers, Username must start with a lowercase character")
n
c
vim public/static/db_backups/20200622_aact_user_accounts.sql
vim fm.user_account_backup_file
fm.user_account_backup_file
n
c
e
n
AACT::Application::AACT_PUBLIC_DATABASE_NAME
AACT::Application::AACT_PUBLIC_HOSTNAME
n
user
n
 User.all.each{|user| user.remove}
n
allow_any_instance_of(described_class).to receive(:can_access_db?).and_return( true )
c
n
con.execute("create schema ctgov;")
n
c
n
c
n
con.execute("create schema ctgov;")
n
c
con=ActiveRecord::Base.connection
c
n
step
n
c
user.errors
user
user.save!
user=User.new(:first_name=>'first', :last_name=>'last',:email=>'rspec.test@duke.edu',:username=>username,:password=>pwd)
User.new(:first_name=>'first', :last_name=>'last',:email=>'rspec.test@duke.edu',:username=>username,:password=>pwd)
user
AACT::Application::AACT_PUBLIC_DATABASE_NAME
AACT::Application::AACT_PUBLIC_HOSTNAME
n
AACT::Application::AACT_PUBLIC_HOSTNAME
ActiveRecord::Base.establish_connection @dbconfig["test"]
n
c
@dbconfig["test"]
n
c
@dbconfig["test"]
@dbconfig[:test]
@dbconfig
YAML.load(File.read('config/database.yml'))
File.read('config/database.yml')
@dbconfig[:test]
n
c
table3_size
n
c
n
